{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Gerenciador de Playlists  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
2.0 \par
}}Gerenciador de Playlists}
{\comment Gerado por doxygen 1.9.6.}
{\creatim \yr2023\mo5\dy1\hr23\min0\sec4}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Gerenciador de Playlists}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Vers\'E3o 2.0\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Segunda, 1 de Maio de 2023 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'CDndice\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
README{\tc \v README}\par \pard\plain 
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid {\tc\tcl1 Playlist-Maneger } \par}
{\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid {\tc\tcl1 Breno Barbosa de Oliveira - 20220021749 } \par}
Programa em C++ que gerencia m\'FAsicas e playlists usando lista encadeada simples. \par
{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid {\tc\tcl3 - Como executar o programa - } \par}
Na pasta "/build" voc\'EA vai o arquivo execut\'E1vel chamado "Gerenciador". Basta dar duplo clique no execut\'E1vel e usar o programa. \par
{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid {\tc\tcl3 - Limita\'E7\'F5es do programa - } \par}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
M\'FAsicas de playlists s\'E3o listadas como endere\'E7o de mem\'F3ria  \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Esporadicamente ocorro um "crash" ao listar m\'FAsicas do sistema  \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Programa n\'E3o consegue lidar com caracteres especiais e acentua\'E7\'E3o local \par
\par}
{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid {\tc\tcl3 - Dificuldades passadas - } \par}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tive que refazer o trabalho do zero devido ao uso incoerente de "smart pointers"  \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Achei a cria\'E7\'E3o dos m\'E9todos para gerenciar playlists foi particularmente complicado  \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fazer a lista ligada para as m\'FAsicas funcionar  \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Gerenciar ponteiros \par
\par}
{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid {\tc\tcl3 - Fun\'E7\'F5es do programa - } \par}
{
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Menu \par
O usu\'E1rio vai iniciar o programa com uma lista das fun\'E7\'F5es e dever\'E1 escolher qual delas deseja executar. As fun\'E7\'F5es s\'E3o listadas de (1 - 11), sendo elas: \par
\par
1- Adicionar m\'FAsica\par
2- Remover m\'FAsica do sistema\par
3 - Criar playlist\par
4 - Remover playlist\par
5 - Adicionar m\'FAsica a playlist\par
6 - Remover m\'FAsica de playlist\par
7 - Listar playlists\par
8 - Listar m\'FAsicas de playlist\par
9 - Listar m\'FAsicas do sistema\par
10 - Mover m\'FAsica de playlist\par
11 - Sair<br>\par
 O programa vai exibir uma mensagem perguntando qual fun\'E7\'E3o ele deseja executar, tudo que ele tem que fazer \'E9 inserir um n\'FAmero correspondente a fun\'E7\'E3o. Essa escolha possui um tratamento de erro caso o usu\'E1rio digite algo que n\'E3o seja um n\'FAmero, retornando uma mensagem de erro caso aconte\'E7a. O programa usa o m\'E9todo 'getline(cin, str)' para ler os dados dentro das fun\'E7\'F5es, portanto ir\'E1 aceitar espa\'E7os at\'E9 que o usu\'E1rio pressione a tecla "enter".\par
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
2.\tab Adicionar m\'FAsica \par
Nessa fun\'E7\'E3o o programa vai pedir para o usu\'E1rio inserir 2 dados, o t\'EDtulo da m\'FAsica e o nome do cantor. A m\'FAsica \'E9 armazenada em uma lista ligada.\par
\par
Exemplo:\par
\par
Insira o nome da m\'FAsica: T\'EDtulo\par
Insira o nome do cantor: Nome<br>\par
Esse m\'E9todo possui um sistema de verifica\'E7\'E3o de dados que retorna uma mensagem de erro caso o usu\'E1rio deixa um dos espa\'E7os em branco ou se a m\'FAsica j\'E1 tiver sido cadastrada anteriormente.\par
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
3.\tab Remover m\'FAsica do sistema\par
Essa fun\'E7\'E3o remove completamente a m\'FAsica do sistema, inclusive das playlists em que ela estiver cadastrada. Ela pede ao usu\'E1rio somente o t\'EDtulo da m\'FAsica que deseja remover, e ela ir\'E1 sumir do sistema.\par
\par
Exemplo:\par
\par
 Insira o t\'EDtulo da m\'FAsica: T\'EDtulo<br>\par
O m\'E9todo possui um sistema de verifica\'E7\'E3o que retorna uma mensagem de erro caso o usu\'E1rio deixe o espa\'E7o em branco, como tamb\'E9m se a lista estiver vazia.\par
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
4.\tab Criar playlist\par
Cria uma nova playlist no sistema. O m\'E9todo ir\'E1 pedir para o usu\'E1rio inserir o nome que deseja para a playlist, que por fim \'E9 adicionada a um "vector" que armazena todas as playlists do sistema.\par
\par
Exemplo:\par
\par
Digite o nome da nova playlist: Nome<br>\par
O m\'E9todo conta com um sistema de verifica\'E7\'E3o, que retorna uma mensagem de erro caso a playlist j\'E1 exista ou se os espa\'E7o estiver sido deixado em branco.\par
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
5.\tab Remover playlist \par
Remove uma playlist do sistema. Assim como o m\'E9todo anterior, o programa ir\'E1 solicitar do usu\'E1rio o nome de uma playlist, caso essa playlist exista ela ser\'E1 removida do "vector".\par
\par
Exemplo:\par
\par
Digite o nome da playlist que deseja remover: Nome<br>\par
Esse m\'E9todo tamb\'E9m possui um sistema de verifica\'E7\'E3o, que retorna uma mensagem de erro caso a playlist n\'E3o exista ou se os espa\'E7o estiver sido deixado em branco.\par
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
6.\tab Adicionar m\'FAsica a playlist \par
Adiciona uma m\'FAsica j\'E1 cadastrada no sistema a uma playlist que j\'E1 existe. O programa vai pedir ao usu\'E1rio para inserir o nome da playlist que ele deseja colocar a m\'FAsica e o t\'EDtulo da m\'FAsica. O programa ir\'E1 buscar a m\'FAsica recebida na lista ligada de m\'FAsicas e ir\'E1 adicion\'E1-la a playlist correspondente a entrada do usu\'E1rio. As playlists armazenadas no "vector" usam uma lista ligada para guardar as m\'FAsicas cadastradas.\par
\par
Exemplo:\par
\par
Insira o nome da playlist: Nome\par
Insira o t\'EDtulo da m\'FAsica: T\'EDtulo<br>\par
O m\'E9todo possui um sistema de verifica\'E7\'E3o, que retorna uma mensagem de erro caso um dos campos tenha sido deixado em branco, se a m\'FAsica ou a playlist n\'E3o exista ou se a m\'FAsica j\'E1 tiver sido adicionada a essa playlist.\par
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
7.\tab Remover m\'FAsica de playlist \par
Remove uma m\'FAsica que j\'E1 tenha sido cadastrada a uma playlist. O programa vai pedir ao usu\'E1rio para inserir o nome da playlist que ele deseja remover a m\'FAsica e o t\'EDtulo da m\'FAsica. O programa ir\'E1 buscar a m\'FAsica recebida na lista ligada de m\'FAsicas e ir\'E1 remove-la da playlist correspondente a entrada do usu\'E1rio.\par
\par
Exemplo:\par
\par
Insira o nome da playlist: Nome\par
Insira o t\'EDtulo da m\'FAsica: T\'EDtulo<br>\par
O m\'E9todo possui um sistema de verifica\'E7\'E3o, que retorna uma mensagem de erro caso um dos campos tenha sido deixado em branco ou se a m\'FAsica ou a playlist n\'E3o exista. \par
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
8.\tab Listar playlists \par
Imprime uma lista com todas as playlists cadastradas. O m\'E9todo ir\'E1 percorrer o "vector" de playlists e imprimir na tela o nome de cada uma delas. Nesse m\'E9todo nenhuma entrada de dados \'E9 requisitada ao usu\'E1rio e retorna uma mensagem de erro caso nenhuma playlist exista.\par
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
9.\tab Listar m\'FAsicas de playlist \par
Imprime todas as m\'FAsicas cadastradas em uma playlist. O m\'E9todo ir\'E1 pedir ao usu\'E1rio o nome da playlist que ele deseja conferir e vai percorrer a lista ligada de m\'FAsicas que a playlist guarda.\par
\par
Exemplo:\par
\par
Insira o nome da playlist: Nome<br>\par
O m\'E9todo tem um sistema de verifica\'E7\'E3o que ir\'E1 retornar uma mensagem de erro caso a playlist n\'E3o exista ou se ela estiver vazia.\par
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
10.\tab Listar m\'FAsicas do sistema \par
Imprime uma lista com todas as m\'FAsicas cadastradas no sistema. Esse m\'E9todo percorre a lista ligada de m\'FAsicas e imprime o t\'EDtulo e o cantor de cada m\'FAsica que existe no sistema. Esse m\'E9todo n\'E3o pede nenhuma entrada de dados ao usu\'E1rio e retorna uma mensagem de erro caso n\'E3o existam m\'FAsicas na lista.\par
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
11.\tab Mover m\'FAsica de playlist \par
Move uma m\'FAsica de uma playlist para outra. Esse m\'E9todo pede ao usu\'E1rio para que ele insira o nome da playlist de origem, playlist de destino e t\'EDtulo da m\'FAsica. Esse m\'E9todo percorre a lista ligada de m\'FAsicas da playlist de origem e identifica a m\'FAsica inserida para poder move-la at\'E9 a playlist de destino.\par
\par
Exemplo:\par
\par
Insira o nome da playlist de origem: Nome 1\par
Insira o nome da playlist de destino: Nome 2\par
Insira o t\'EDtulo da m\'FAsica: T\'EDtulo<br>\par
Esse m\'E9todo possui um sistema de verifica\'E7\'E3o que retorna uma mensagem de erro caso alguns dos campos estejam em branco, ou se alguma das playlists ou m\'FAsica inseridas n\'E3o existam.\par
\par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos componentes\par \pard\plain 
{\tc \v \'CDndice dos componentes}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de componentes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Lista de classes, estruturas, uni\'F5es e interfaces com uma breve descri\'E7\'E3o:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Musica} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MusicasLista} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NoLista} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NoPlaylist} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Playlist} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PlaylistManager} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos ficheiros\par \pard\plain 
{\tc \v \'CDndice dos ficheiros}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de ficheiros\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Lista de todos os ficheiros com uma breve descri\'E7\'E3o:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b D:/Projetos/Playlist-Maneger/build/CMakeFiles/3.26.3/CompilerIdC/{\b CMakeCCompilerId.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/build/CMakeFiles/3.26.3/CompilerIdCXX/{\b CMakeCXXCompilerId.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/{\b listaMusica.cpp.obj.d} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/{\b main.cpp.obj.d} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/{\b musica.cpp.obj.d} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/{\b noLista.cpp.obj.d} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/{\b noPlaylist.cpp.obj.d} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/{\b playlist.cpp.obj.d} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/{\b playlistManager.cpp.obj.d} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/include/{\b listaMusica.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/include/{\b musica.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/include/{\b noLista.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/include/{\b noPlaylist.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/include/{\b playlist.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/include/{\b playlistManager.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/src/{\b listaMusica.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/src/{\b main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/src/{\b musica.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/src/{\b noLista.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/src/{\b noPlaylist.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/src/{\b playlist.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/Projetos/Playlist-Maneger/src/{\b playlistManager.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documenta\'E7\'E3o da classe{\tc \v Documenta\'E7\'E3o da classe}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 classe Musica\par \pard\plain 
{\tc\tcl2 \v Musica}
{\xe \v Musica}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\par
{
{\f2 #include <musica.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Musica} (std::string *m_titulo, std::string *m_cantor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Musica} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string * {\b getTitulo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string * {\b getCantor} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos Construtores & Destrutor\par
\pard\plain 
{\xe \v Musica\:Musica}
{\xe \v Musica\:Musica}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Musica::Musica (std::string *  {\i m_titulo}, std::string *  {\i m_cantor})}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4 : titulo(m_titulo), cantor(m_cantor) \{\} \par
}
}
{\xe \v ~Musica\:Musica}
{\xe \v Musica\:~Musica}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Musica::~Musica ()}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8 \{\par
9     {\cf20 // Verifica se os ponteiros s\'E3o diferentes de "nullptr"}\par
10     {\cf19 if} (titulo != {\cf17 nullptr}) {\cf17 delete} titulo;\par
11     {\cf19 if} (cantor != {\cf17 nullptr}) {\cf17 delete} cantor;\par
12 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getCantor\:Musica}
{\xe \v Musica\:getCantor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string * Musica::getCantor ()}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 22 \{\par
23     {\cf19 return} cantor;\par
24 \}\par
}
}
{\xe \v getTitulo\:Musica}
{\xe \v Musica\:getTitulo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string * Musica::getTitulo ()}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16 \{\par
17     {\cf19 return} titulo;\par
18 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta classe foi gerada a partir dos seguintes ficheiros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Projetos/Playlist-Maneger/include/{\b musica.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Projetos/Playlist-Maneger/src/{\b musica.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 classe MusicasLista\par \pard\plain 
{\tc\tcl2 \v MusicasLista}
{\xe \v MusicasLista}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\par
{
{\f2 #include <listaMusica.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MusicasLista} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~MusicasLista} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addMusica} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeMusica} (std::string titulo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Musica} * {\b buscaMusica} (std::string titulo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b coutLista} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos Construtores & Destrutor\par
\pard\plain 
{\xe \v MusicasLista\:MusicasLista}
{\xe \v MusicasLista\:MusicasLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MusicasLista::MusicasLista ()}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4 : head({\cf17 nullptr}), tamanho(0) \{\}\par
}
}
{\xe \v ~MusicasLista\:MusicasLista}
{\xe \v MusicasLista\:~MusicasLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MusicasLista::~MusicasLista ()}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8 \{\par
9     {\cf20 // Percorre lista de m\'FAsicas em la\'E7o while}\par
10     {\cf19 while}(head)\par
11     \{   \par
12         {\cf20 // Define o n\'F3 atual como "head"}\par
13         NoLista *NoAtual = head;\par
14 \par
15         {\cf20 // Define pr\'F3ximo n\'F3 como "head"}\par
16         head = head -> getProxima();\par
17 \par
18         {\cf20 // Deleta n\'F3}\par
19         {\cf17 delete} NoAtual;\par
20     \}\par
21 \par
22     {\cf20 // Ao final do la\'E7o, define tamanho como 0}\par
23     tamanho = 0;\par
24 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v addMusica\:MusicasLista}
{\xe \v MusicasLista\:addMusica}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MusicasLista::addMusica ()}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 28 \{\par
29     std::cout << std::endl;\par
30     std::cout << {\cf22 "- Adicionar musicas -"} << std::endl;\par
31     std::cout << std::endl;\par
32 \par
33     std::string titulo, cantor;\par
34 \par
35     {\cf20 // Solicita ao usu\'E1rio que digite o nome da m\'FAsica}\par
36     std::cout << {\cf22 "Insira o nome da musica: "};\par
37     std::getline(std::cin, titulo);\par
38 \par
39     {\cf20 // Solicita ao usu\'E1rio que digite o nome do cantor}\par
40     std::cout << {\cf22 "Insira o nome do cantor: "};\par
41     std::getline(std::cin, cantor);\par
42 \par
43     std::cout << std::endl;\par
44 \par
45     {\cf20 // Confere se usu\'E1rio deixou algum campo em branco}\par
46     {\cf19 if}(titulo.empty() || cantor.empty())\par
47     \{\par
48         std::cout << {\cf22 "Existem dados faltando! Musica nao pode ser adicionada."} << std::endl;\par
49         {\cf19 return};\par
50     \}\par
51 \par
52     {\cf20 // Confere se a m\'FAsica j\'E1 existe na lista}\par
53     {\cf19 if}(buscaMusica(titulo))\par
54     \{\par
55         std::cout << {\cf22 "A musica "} << titulo << {\cf22 " ja existe no sistema!"} << std::endl;\par
56         {\cf19 return};\par
57     \}\par
58 \par
59     {\cf20 // Define o n\'F3 atual como sendo o "head"}\par
60     NoLista *NoAtual = head;\par
61 \par
62     {\cf20 // A string digitada pelo usu\'E1rio \'E9 passada para o construtor atrav\'E9z de um novo ponteiro alocado no heap}\par
63     Musica *novaMusica = {\cf17 new} Musica({\cf17 new} std::string(titulo), {\cf17 new} std::string(cantor));\par
64 \par
65     {\cf20 // Confere se m\'FAsica foi adicionada}\par
66     {\cf19 if}(!novaMusica)\par
67     \{\par
68         std::cout << {\cf22 "Erro ao adicionar nova musica!"} << std::endl;\par
69         {\cf19 return};\par
70     \}\par
71 \par
72     {\cf20 // Cria um novo n\'F3 para a lista de m\'FAsicas}\par
73     NoLista *novoNo = {\cf17 new} NoLista(novaMusica, head);\par
74 \par
75     {\cf20 // Confere se novo n\'F3 foi criado e deleta m\'FAsica caso n\'E3o tenha sido}\par
76     {\cf19 if}(!novoNo)\par
77     \{\par
78         std::cout << {\cf22 "Erro ao adicionar novo no!"} << std::endl;\par
79 \par
80         {\cf20 // Deleta m\'FAsica}\par
81         {\cf17 delete} novaMusica;\par
82         {\cf19 return};\par
83     \}\par
84 \par
85     {\cf20 // Define o novo n\'F3 como sendo o "head" da lista}\par
86     head = novoNo;\par
87 \par
88     {\cf20 // Incrimenta o tamanho da lista de m\'FAsicas em +1}\par
89     tamanho++;\par
90 \par
91     std::cout << {\cf22 "A musica "} << titulo << {\cf22 " foi adicionada ao sistema!"} << std::endl;\par
92     std::cout << std::endl;\par
93 \}\par
}
}
{\xe \v buscaMusica\:MusicasLista}
{\xe \v MusicasLista\:buscaMusica}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Musica} * MusicasLista::buscaMusica (std::string  {\i titulo})}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 149 \{\par
150     {\cf20 // Confere se lista est\'E1 vazia antes de tentar buscar}\par
151     {\cf19 if}(!head)\par
152     \{\par
153         {\cf19 return} {\cf17 nullptr};\par
154     \}\par
155     {\cf19 else}\par
156     \{\par
157         {\cf20 // La\'E7o for que percorre toda lista de m\'FAsicas}\par
158         {\cf19 for}(NoLista *NoAtual = head; NoAtual; NoAtual = NoAtual -> getProxima())\par
159         \{\par
160             {\cf20 // Define o n\'F3 atual como sendo o "head"}\par
161             Musica *musicaAtual = NoAtual -> getMusica();\par
162 \par
163             {\cf20 // Confere se t\'EDtulo da m\'FAsica atual \'E9 igual ao t\'EDtulo passado como par\'E2metro}\par
164             {\cf19 if}(*(musicaAtual -> getTitulo()) == titulo) {\cf20 // The bug was here}\par
165             \{\par
166                 {\cf19 return} NoAtual -> getMusica();\par
167             \}\par
168         \}\par
169 \par
170         {\cf20 // Caso n\'E3o encontre m\'FAsica, retorna "nullptr"}\par
171         std::cout << {\cf22 "Musica nao encontrada"} << std::endl;\par
172         {\cf19 return} {\cf17 nullptr};   \par
173     \}\par
174 \}\par
}
}
{\xe \v coutLista\:MusicasLista}
{\xe \v MusicasLista\:coutLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MusicasLista::coutLista ()}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 178 \{\par
179     {\cf20 // Confere se lista est\'E1 vazia antes de tentar imprimir}\par
180     {\cf19 if}(!head)\par
181     \{\par
182         std::cout << {\cf22 "Nenhuma musica cadastrada"} << std::endl;\par
183         {\cf19 return};\par
184     \}\par
185 \par
186     std::cout << std::endl;\par
187     std::cout << {\cf22 "Musicas no sistema: "} << std::endl;\par
188     std::cout << std::endl;\par
189 \par
190     {\cf20 // La\'E7o for que percorre toda lista de m\'FAsicas}\par
191     {\cf19 for}(NoLista *NoAtual = head; NoAtual; NoAtual = NoAtual -> getProxima())\par
192     \{\par
193         Musica *musicaAtual = NoAtual -> getMusica();\par
194 \par
195         std::string *titulo = musicaAtual -> getTitulo();\par
196         std::string *cantor = musicaAtual -> getCantor();\par
197 \par
198         std::cout << {\cf22 "Titulo: "} << *titulo << std::endl;\par
199         std::cout << {\cf22 "Cantor: "} << *cantor << std::endl;\par
200 \par
201         std::cout << std::endl;\par
202     \}\par
203 \}\par
}
}
{\xe \v removeMusica\:MusicasLista}
{\xe \v MusicasLista\:removeMusica}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MusicasLista::removeMusica (std::string  {\i titulo})}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 97 \{\par
98     {\cf20 // Confere se lista est\'E1 vazia antes de tentar remover}\par
99     {\cf19 if}(!head)\par
100     \{\par
101         std::cout << {\cf22 "Nenhuma musica cadastrada"} << std::endl;\par
102         {\cf19 return};\par
103     \}\par
104     {\cf19 else}\par
105     \{\par
106         {\cf20 // Define o n\'F3 atual como sendo o "head"}\par
107         NoLista *NoAtual = head;\par
108 \par
109         {\cf20 // Define o n\'F3 anterior como sendo "nullptr"}\par
110         NoLista *NoAnterior = {\cf17 nullptr};\par
111 \par
112         {\cf20 // La\'E7o for que percorre toda lista de m\'FAsicas}\par
113         {\cf19 for}(NoAtual = head; NoAtual; NoAtual = NoAtual -> getProxima())\par
114         \{\par
115             Musica *musicaAtual = NoAtual -> getMusica();\par
116 \par
117             {\cf20 // Confere se t\'EDtulo da m\'FAsica atual \'E9 igual ao t\'EDtulo passado como par\'E2metro}\par
118             {\cf19 if}(*(musicaAtual -> getTitulo()) == titulo)\par
119             \{\par
120                 {\cf20 // Caso o n\'F3 atual seja o "head"}\par
121                 {\cf19 if}(NoAtual == head)\par
122                 \{\par
123                     {\cf20 // Define o "head" como sendo o pr\'F3ximo n\'F3}\par
124                     head = NoAtual -> getProxima();\par
125                 \}\par
126                 {\cf19 else}\par
127                 \{\par
128                     {\cf20 // Define o pr\'F3ximo n\'F3 do n\'F3 anterior como sendo o pr\'F3ximo n\'F3 do n\'F3 atual}\par
129                     NoAnterior -> setProxima(NoAtual -> getProxima());\par
130                 \}\par
131 \par
132                 {\cf20 // Deleta n\'F3 atual}\par
133                 {\cf17 delete} NoAtual;\par
134 \par
135                 {\cf20 // Decrementa o tamanho da lista de m\'FAsicas em -1}\par
136                 tamanho--;\par
137 \par
138                 {\cf19 return};\par
139             \}\par
140 \par
141             {\cf20 // Define o n\'F3 anterior como sendo o n\'F3 atual}\par
142             NoAnterior = NoAtual;\par
143         \}\par
144     \}\par
145 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta classe foi gerada a partir dos seguintes ficheiros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Projetos/Playlist-Maneger/include/{\b listaMusica.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Projetos/Playlist-Maneger/src/{\b listaMusica.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 classe NoLista\par \pard\plain 
{\tc\tcl2 \v NoLista}
{\xe \v NoLista}
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
\par
{
{\f2 #include <noLista.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NoLista} ({\b Musica} *novaMusica, {\b NoLista} *proximaMusica)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~NoLista} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Musica} * {\b getMusica} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NoLista} * {\b getProxima} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setProxima} ({\b NoLista} *proximo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos Construtores & Destrutor\par
\pard\plain 
{\xe \v NoLista\:NoLista}
{\xe \v NoLista\:NoLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NoLista::NoLista ({\b Musica} *  {\i novaMusica}, {\b NoLista} *  {\i proximaMusica})}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4 : musica(novaMusica), proxima(proximaMusica) \{\}\par
}
}
{\xe \v ~NoLista\:NoLista}
{\xe \v NoLista\:~NoLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NoLista::~NoLista ()}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8 \{\par
9     {\cf20 // Verifica se o ponteiro \'E9 diferente de "nullptr"}\par
10     {\cf19 if} (musica != NULL)\par
11     \{\par
12         {\cf17 delete} musica;   \par
13     \}\par
14 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getMusica\:NoLista}
{\xe \v NoLista\:getMusica}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Musica} * NoLista::getMusica ()}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18 \{\par
19     {\cf19 return} musica;\par
20 \}\par
}
}
{\xe \v getProxima\:NoLista}
{\xe \v NoLista\:getProxima}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NoLista} * NoLista::getProxima ()}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24 \{  \par
25     {\cf19 return} proxima;\par
26 \}\par
}
}
{\xe \v setProxima\:NoLista}
{\xe \v NoLista\:setProxima}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void NoLista::setProxima ({\b NoLista} *  {\i proximo})}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30 \{\par
31     proxima = proximo;\par
32 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta classe foi gerada a partir dos seguintes ficheiros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Projetos/Playlist-Maneger/include/{\b noLista.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Projetos/Playlist-Maneger/src/{\b noLista.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 classe NoPlaylist\par \pard\plain 
{\tc\tcl2 \v NoPlaylist}
{\xe \v NoPlaylist}
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
\par
{
{\f2 #include <noPlaylist.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NoPlaylist} ({\b Musica} *m_musica)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~NoPlaylist} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Musica} * {\b getMusica} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMusica} ({\b Musica} *m_musica)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NoPlaylist} * {\b getNext} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNext} ({\b NoPlaylist} *m_next)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos Construtores & Destrutor\par
\pard\plain 
{\xe \v NoPlaylist\:NoPlaylist}
{\xe \v NoPlaylist\:NoPlaylist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NoPlaylist::NoPlaylist ({\b Musica} *  {\i m_musica})}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4 : musica(m_musica), next({\cf17 nullptr}) \{\}\par
}
}
{\xe \v ~NoPlaylist\:NoPlaylist}
{\xe \v NoPlaylist\:~NoPlaylist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NoPlaylist::~NoPlaylist ()}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8 \{\par
9     {\cf20 // Verifica se o ponteiro \'E9 diferente de "nullptr"}\par
10     {\cf19 if} (musica != {\cf17 nullptr})\par
11     \{\par
12         {\cf17 delete} musica;\par
13     \}\par
14 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getMusica\:NoPlaylist}
{\xe \v NoPlaylist\:getMusica}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Musica} * NoPlaylist::getMusica ()}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18 \{\par
19     {\cf19 return} musica;\par
20 \}\par
}
}
{\xe \v getNext\:NoPlaylist}
{\xe \v NoPlaylist\:getNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NoPlaylist} * NoPlaylist::getNext ()}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30 \{\par
31     {\cf19 return} next;\par
32 \}\par
}
}
{\xe \v setMusica\:NoPlaylist}
{\xe \v NoPlaylist\:setMusica}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void NoPlaylist::setMusica ({\b Musica} *  {\i m_musica})}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24 \{\par
25     musica = m_musica;\par
26 \}\par
}
}
{\xe \v setNext\:NoPlaylist}
{\xe \v NoPlaylist\:setNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void NoPlaylist::setNext ({\b NoPlaylist} *  {\i m_next})}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 36 \{\par
37     next = m_next;\par
38 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta classe foi gerada a partir dos seguintes ficheiros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Projetos/Playlist-Maneger/include/{\b noPlaylist.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Projetos/Playlist-Maneger/src/{\b noPlaylist.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 classe Playlist\par \pard\plain 
{\tc\tcl2 \v Playlist}
{\xe \v Playlist}
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\par
{
{\f2 #include <playlist.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Playlist} (std::string m_nomePlaylist)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Playlist} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Musica} * {\b buscaMusicaPlaylist} (std::string *titulo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addMusicaPlaylist} ({\b Musica} *m_musica)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeMusicaPlaylist} (std::string *titulo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getNome} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NoPlaylist} * {\b getHead} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setHead} ({\b NoPlaylist} *m_head)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos Construtores & Destrutor\par
\pard\plain 
{\xe \v Playlist\:Playlist}
{\xe \v Playlist\:Playlist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Playlist::Playlist (std::string  {\i m_nomePlaylist})}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4 : nomePlaylist(m_nomePlaylist), head({\cf17 nullptr}), tamanhoPlaylist(0) \{\}\par
}
}
{\xe \v ~Playlist\:Playlist}
{\xe \v Playlist\:~Playlist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Playlist::~Playlist ()}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8 \{\par
9     NoPlaylist *aux = head;\par
10 \par
11     {\cf20 // Percorre a lista deletando os n\'F3s}\par
12     {\cf19 while} (aux != {\cf17 nullptr})\par
13     \{\par
14         NoPlaylist *temp = aux -> getNext();\par
15         {\cf17 delete} aux;\par
16         aux = temp;\par
17     \}\par
18 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v addMusicaPlaylist\:Playlist}
{\xe \v Playlist\:addMusicaPlaylist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Playlist::addMusicaPlaylist ({\b Musica} *  {\i m_musica})}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 22 \{\par
23     {\cf20 // Cria um novo n\'F3}\par
24     NoPlaylist *novoNo = {\cf17 new} NoPlaylist(m_musica);\par
25 \par
26     {\cf20 // Caso a lista esteja vazia}\par
27     {\cf19 if}(head == {\cf17 nullptr})\par
28     \{\par
29         head = novoNo;\par
30     \}\par
31     {\cf19 else}\par
32     \{\par
33         NoPlaylist *aux = head;\par
34 \par
35         {\cf20 // Percorre a lista at\'E9 o \'FAltimo n\'F3}\par
36         {\cf19 while} (aux -> getNext() != {\cf17 nullptr})\par
37         \{\par
38             aux = aux -> getNext();\par
39         \}\par
40 \par
41         {\cf20 // Adiciona o novo n\'F3 ao final da lista}\par
42         aux -> setNext(novoNo);\par
43     \}\par
44 \par
45     tamanhoPlaylist++;\par
46 \}\par
}
}
{\xe \v buscaMusicaPlaylist\:Playlist}
{\xe \v Playlist\:buscaMusicaPlaylist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Musica} * Playlist::buscaMusicaPlaylist (std::string *  {\i titulo})}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 98 \{\par
99     {\cf20 // Se a playlist estiver vazia, n\'E3o \'E9 poss\'EDvel buscar uma m\'FAsica}\par
100     {\cf19 if}(!head)\par
101     \{\par
102         std::cout << {\cf22 "Playlist vazia!"} << std::endl;\par
103         {\cf19 return} {\cf17 nullptr};\par
104     \}\par
105 \par
106     {\cf20 // Percorre a playlist}\par
107     {\cf19 for}(NoPlaylist *atual = head; atual != {\cf17 nullptr}; atual = atual -> getNext())\par
108     \{\par
109         {\cf20 // Verifica se o t\'EDtulo da m\'FAsica atual \'E9 igual ao t\'EDtulo procurado}\par
110         {\cf19 if}(*(atual -> getMusica() -> getTitulo()) == *titulo)\par
111         \{\par
112             {\cf20 // Retorna o endere\'E7o da m\'FAsica encontrada}\par
113             {\cf19 return} atual -> getMusica();\par
114         \}\par
115     \}\par
116     \par
117     {\cf20 // Se a m\'FAsica n\'E3o foi encontrada, retorna nullptr}\par
118     {\cf19 return} {\cf17 nullptr};\par
119 \}\par
}
}
{\xe \v getHead\:Playlist}
{\xe \v Playlist\:getHead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NoPlaylist} * Playlist::getHead ()}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 129 \{\par
130     {\cf19 return} head;\par
131 \}\par
}
}
{\xe \v getNome\:Playlist}
{\xe \v Playlist\:getNome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Playlist::getNome ()}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 123 \{\par
124     {\cf19 return} nomePlaylist;\par
125 \}\par
}
}
{\xe \v removeMusicaPlaylist\:Playlist}
{\xe \v Playlist\:removeMusicaPlaylist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Playlist::removeMusicaPlaylist (std::string *  {\i titulo})}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 50 \{\par
51     {\cf20 // Caso a lista esteja vazia}\par
52     {\cf19 if}(head == {\cf17 nullptr})\par
53     \{\par
54         std::cout << std::endl;\par
55         std::cout << {\cf22 "Playlist vazia!"} << std::endl;\par
56 \par
57         {\cf19 return};\par
58     \}\par
59 \par
60     NoPlaylist *aux = head;\par
61 \par
62     {\cf20 // Caso a m\'FAsica seja a primeira da playlist}\par
63     {\cf19 if}(*(head -> getMusica() -> getTitulo()) == *titulo)\par
64     \{\par
65         {\cf20 // Define o segundo n\'F3 como o primeiro}\par
66         head = head -> getNext();\par
67         \par
68         {\cf20 // Deleta o primeiro n\'F3 antigo}\par
69         {\cf17 delete} aux;\par
70         tamanhoPlaylist--;\par
71 \par
72         {\cf19 return};\par
73     \}\par
74 \par
75     {\cf20 // Caso a m\'FAsica seja encontrada em outra posi\'E7\'E3o da playlist}\par
76     {\cf19 while}(aux -> getNext() != {\cf17 nullptr})\par
77     \{\par
78         {\cf20 // Verifica se o t\'EDtulo da m\'FAsica \'E9 igual ao t\'EDtulo procurado}\par
79         {\cf19 if} (*(aux -> getNext() -> getMusica() -> getTitulo()) == *titulo)\par
80         \{\par
81             NoPlaylist *temp = aux -> getNext();\par
82             aux -> setNext(temp -> getNext());\par
83             {\cf17 delete} temp;\par
84             tamanhoPlaylist--;\par
85 \par
86             {\cf19 return};\par
87         \}\par
88 \par
89         aux = aux -> getNext();\par
90     \}\par
91 \par
92     {\cf20 // Caso a m\'FAsica n\'E3o seja encontrada}\par
93     std::cout << {\cf22 "Musica nao encontrada!"} << std::endl;\par
94 \}\par
}
}
{\xe \v setHead\:Playlist}
{\xe \v Playlist\:setHead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Playlist::setHead ({\b NoPlaylist} *  {\i m_head})}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 135 \{\par
136     head = m_head;\par
137 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta classe foi gerada a partir dos seguintes ficheiros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Projetos/Playlist-Maneger/include/{\b playlist.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Projetos/Playlist-Maneger/src/{\b playlist.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 classe PlaylistManager\par \pard\plain 
{\tc\tcl2 \v PlaylistManager}
{\xe \v PlaylistManager}
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
\par
{
{\f2 #include <playlistManager.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PlaylistManager} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~PlaylistManager} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b criarPlaylist} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removerPlaylist} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adicionarMusica} ({\b MusicasLista} *musicas)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removerMusica} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removerMusicaTodasPlaylists} ({\b MusicasLista} *musicasLista)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b moverMusica} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Playlist} * {\b buscarPlaylistPorNome} (std::string nome)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b listarPlaylists} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b listarMusicasPlaylist} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b listarMusicasPlaylistRecursivo} ({\b NoPlaylist} *musicaAtual)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos Construtores & Destrutor\par
\pard\plain 
{\xe \v PlaylistManager\:PlaylistManager}
{\xe \v PlaylistManager\:PlaylistManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PlaylistManager::PlaylistManager ()}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4 : playlists\{\} \{\}\par
}
}
{\xe \v ~PlaylistManager\:PlaylistManager}
{\xe \v PlaylistManager\:~PlaylistManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PlaylistManager::~PlaylistManager ()}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8 \{\par
9     {\cf20 // Percorre o "vector" de playlists}\par
10     {\cf19 for} ({\cf17 auto}& playlist : playlists)\par
11     \{\par
12         {\cf17 delete} playlist;\par
13     \}\par
14 \par
15     {\cf20 // Limpa o "vector" de playlists}\par
16     playlists.clear();\par
17 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionarMusica\:PlaylistManager}
{\xe \v PlaylistManager\:adicionarMusica}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PlaylistManager::adicionarMusica ({\b MusicasLista} *  {\i musicas})}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 127 \{\par
128     std::cout << std::endl;\par
129     std::cout << {\cf22 "- Adicionar musica a playlist -"} << std::endl;\par
130 \par
131     std::string tituloMusica, nomePlaylist;\par
132 \par
133     {\cf20 // Solicita ao usu\'E1rio que digite o nome da playlist e o t\'EDtulo da m\'FAsica}\par
134     std::cout << std::endl;\par
135     std::cout << {\cf22 "Insira o nome da playlist: "};\par
136     std::getline(std::cin, nomePlaylist);\par
137 \par
138     std::cout << {\cf22 "Insira o titulo da musica: "};\par
139     std::getline(std::cin, tituloMusica);\par
140 \par
141     {\cf20 // Verifica se os campos est\'E3o vazios}\par
142     {\cf19 if}(tituloMusica.empty() || nomePlaylist.empty())\par
143     \{\par
144         std::cout << std::endl;\par
145         std::cout << {\cf22 "Nome da playlist ou titulo da musica nao pode ser vazio."} << std::endl;\par
146 \par
147         {\cf19 return};\par
148     \}\par
149 \par
150     {\cf20 // Verifica se a playlist existe}\par
151     {\cf19 if} (buscarPlaylistPorNome(nomePlaylist) == {\cf17 nullptr})\par
152     \{\par
153         std::cout << std::endl;\par
154         std::cout << {\cf22 "Playlist nao encontrada."} << std::endl;\par
155         {\cf19 return};\par
156     \}\par
157 \par
158     {\cf20 // Verifica se m\'FAsica j\'E1 foi cadastrada na playlist}\par
159     {\cf19 if} (buscarPlaylistPorNome(nomePlaylist) -> buscaMusicaPlaylist(&tituloMusica) != {\cf17 nullptr})\par
160     \{\par
161         std::cout << std::endl;\par
162         std::cout << {\cf22 "Musica ja cadastrada na playlist."} << std::endl;\par
163         {\cf19 return};\par
164     \}\par
165 \par
166     {\cf20 // Busca playlist por nome}\par
167     Playlist *playlist = buscarPlaylistPorNome(nomePlaylist);\par
168 \par
169     {\cf20 // Verifica se a playlist existe}\par
170     {\cf19 if} (playlist == {\cf17 nullptr})\par
171     \{\par
172         std::cout << std::endl;\par
173         std::cout << {\cf22 "Playlist nao encontrada."} << std::endl;\par
174         {\cf19 return};\par
175     \}\par
176 \par
177     {\cf20 // Busca m\'FAsica por t\'EDtulo usando m\'E9todo da classe MusicasLista}\par
178     Musica *musica = musicas -> buscaMusica(tituloMusica);\par
179 \par
180     {\cf20 // Verifica se a m\'FAsica existe}\par
181     {\cf19 if} (musica == {\cf17 nullptr})\par
182     \{\par
183         std::cout << std::endl;\par
184         std::cout << {\cf22 "Musica nao encontrada."} << std::endl;\par
185         {\cf19 return};\par
186     \}\par
187 \par
188     {\cf20 // Adiciona m\'FAsica \'E0 playlist}\par
189     playlist -> addMusicaPlaylist(musica);\par
190 \par
191     {\cf20 // Printa mensagem de sucesso}\par
192     std::cout << std::endl;\par
193     std::cout << {\cf22 "Musica adicionada com sucesso a playlist "} << playlist -> getNome() << {\cf22 "."} << std::endl;\par
194 \}\par
}
}
{\xe \v buscarPlaylistPorNome\:PlaylistManager}
{\xe \v PlaylistManager\:buscarPlaylistPorNome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Playlist} * PlaylistManager::buscarPlaylistPorNome (std::string  {\i nome})}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 103 \{\par
104     {\cf20 // Caso o par\'E2metro esteja vazio}\par
105     {\cf19 if} (nome.empty())\par
106     \{\par
107         std::cout << {\cf22 "Nome nao pode ser vazio."} << std::endl;\par
108         {\cf19 return} {\cf17 nullptr};\par
109     \}\par
110 \par
111     {\cf20 // Percorre o vetor de playlists}\par
112     {\cf19 for} ({\cf17 auto} playlist : playlists)\par
113     \{\par
114         {\cf20 // Se encontrou uma playlist com o nome passado, retorna a playlist}\par
115         {\cf19 if} (playlist -> getNome() == nome)\par
116         \{\par
117             {\cf19 return} playlist;\par
118         \}\par
119     \}\par
120 \par
121     {\cf20 // Se n\'E3o encontrou nenhuma playlist com o nome passado}\par
122     {\cf19 return} {\cf17 nullptr};\par
123 \}\par
}
}
{\xe \v criarPlaylist\:PlaylistManager}
{\xe \v PlaylistManager\:criarPlaylist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PlaylistManager::criarPlaylist ()}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21 \{\par
22     std::cout << std::endl;\par
23     std::cout << {\cf22 "- Criar Playlist -"} << std::endl;\par
24 \par
25     std::string nomePlaylist;\par
26 \par
27     {\cf20 // Solicita ao usu\'E1rio que digite o nome da playlist}\par
28     std::cout << std::endl;\par
29     std::cout << {\cf22 "Digite o nome da nova playlist: "};\par
30     std::getline(std::cin, nomePlaylist);\par
31 \par
32     {\cf20 // Caso o par\'E2metro esteja vazio, printa mensagem de erro e retorna}\par
33     {\cf19 if} (nomePlaylist.empty())\par
34     \{\par
35         std::cout << {\cf22 "Nome da playlist nao pode ser vazio."} << std::endl;\par
36         {\cf19 return};\par
37     \}\par
38 \par
39     {\cf20 // confere se playlist j\'E1 existe}\par
40     {\cf19 for} ({\cf17 auto}& playlist : playlists)\par
41     \{\par
42         {\cf20 // Se j\'E1 existe, printa mensagem de erro e retorna}\par
43         {\cf19 if} (playlist -> getNome() == nomePlaylist)\par
44         \{\par
45             std::cout << std::endl;\par
46             std::cout << {\cf22 "A playlist "} << nomePlaylist << {\cf22 " ja existe!"} << std::endl;\par
47             {\cf19 return};\par
48         \}\par
49     \}\par
50 \par
51     {\cf20 // Cria uma nova playlist e adiciona ela ao "vector"}\par
52     Playlist* novaPlaylist = {\cf17 new} Playlist(nomePlaylist);\par
53     playlists.push_back(novaPlaylist);\par
54 \par
55     {\cf20 // Printa mensagem de sucesso}\par
56     std::cout << std::endl;\par
57     std::cout << {\cf22 "Playlist \\""} << nomePlaylist << {\cf22 "\\" criada com sucesso!"} << std::endl;\par
58 \}\par
}
}
{\xe \v listarMusicasPlaylist\:PlaylistManager}
{\xe \v PlaylistManager\:listarMusicasPlaylist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PlaylistManager::listarMusicasPlaylist ()}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 394 \{\par
395     std::cout << std::endl;\par
396     std::cout << {\cf22 "- Imprimir Musicas de uma Playlist -"} << std::endl;\par
397 \par
398     std::string nomePlaylist;\par
399     \par
400     {\cf20 // Solicita ao usu\'E1rio que digite o nome da playlist}\par
401     std::cout << std::endl;\par
402     std::cout << {\cf22 "Digite o nome da playlist: "};\par
403     std::getline(std::cin, nomePlaylist);\par
404 \par
405     {\cf20 // Verifica se o campo est\'E1 vazio}\par
406     {\cf19 if}(nomePlaylist.empty())\par
407     \{\par
408         std::cout << std::endl;\par
409         std::cout << {\cf22 "Nome da playlist nao pode ser vazio."} << std::endl;\par
410 \par
411         {\cf19 return};\par
412     \}\par
413 \par
414     {\cf20 // Verifica se a playlist existe}\par
415     {\cf19 for} ({\cf17 auto}& playlist : playlists) \par
416     \{\par
417         {\cf20 // Se etapa atual do la\'E7o tiver mesmo nome que a playlist inserida, imprime as m\'FAsicas}\par
418         {\cf19 if} (playlist -> getNome() == nomePlaylist) \par
419         \{\par
420             std::cout << std::endl;\par
421             std::cout << {\cf22 "Musicas da Playlist \\""} << nomePlaylist << {\cf22 "\\":"} << std::endl;\par
422             std::cout << std::endl;\par
423 \par
424             {\cf20 // Verifica se a playlist n\'E3o possui m\'FAsicas}\par
425             {\cf19 if} (playlist -> getHead() == {\cf17 nullptr}) \par
426             \{\par
427                 std::cout << std::endl;\par
428                 std::cout << {\cf22 "A playlist \\""} << nomePlaylist << {\cf22 "\\" nao possui musicas!"} << std::endl;\par
429                 {\cf19 return};\par
430             \}\par
431 \par
432             {\cf20 // Chama a fun\'E7\'E3o auxiliar para imprimir as m\'FAsicas}\par
433             listarMusicasPlaylistRecursivo(playlist -> getHead());\par
434             {\cf19 return};\par
435         \}\par
436     \}\par
437 \par
438     {\cf20 // Se a playlist n\'E3o existir, imprime mensagem de erro}\par
439     std::cout << std::endl;\par
440     std::cout << {\cf22 "A playlist \\""} << nomePlaylist << {\cf22 "\\" nao existe!"} << std::endl;\par
441 \}\par
}
}
{\xe \v listarMusicasPlaylistRecursivo\:PlaylistManager}
{\xe \v PlaylistManager\:listarMusicasPlaylistRecursivo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PlaylistManager::listarMusicasPlaylistRecursivo ({\b NoPlaylist} *  {\i musicaAtual})}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 445 \{\par
446     {\cf20 // Confere se a m\'FAsica atual n\'E3o \'E9 nula}\par
447     {\cf19 if} (musicaAtual != {\cf17 nullptr}) \par
448     \{\par
449         {\cf20 // Imprime a m\'FAsica atual}\par
450         std::cout << {\cf22 "- "} << (*musicaAtual -> getMusica()).getTitulo() << {\cf22 " ("} << (*musicaAtual -> getMusica()).getCantor() << {\cf22 ")"} << std::endl;\par
451 \par
452         {\cf20 // Chama a fun\'E7\'E3o novamente com a pr\'F3xima m\'FAsica}\par
453         listarMusicasPlaylistRecursivo(musicaAtual -> getNext());\par
454     \}\par
455 \}\par
}
}
{\xe \v listarPlaylists\:PlaylistManager}
{\xe \v PlaylistManager\:listarPlaylists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PlaylistManager::listarPlaylists ()}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 372 \{\par
373     std::cout << std::endl;\par
374     std::cout << {\cf22 " - Playlists - "} << std::endl;\par
375 \par
376     {\cf20 // Confere se o vetor de playlists est\'E1 vazio}\par
377     {\cf19 if}(playlists.empty())\par
378     \{\par
379         std::cout << std::endl;\par
380         std::cout << {\cf22 "Nenhuma playlist cadastrada!"} << std::endl;\par
381         {\cf19 return};\par
382     \}\par
383 \par
384     {\cf20 // Percorre o vetor de playlists e imprime o nome de cada uma}\par
385     {\cf19 for}({\cf17 auto} playlist : playlists)\par
386     \{\par
387         std::cout << std::endl;\par
388         std::cout << playlist -> getNome() << std::endl;\par
389     \}\par
390 \}\par
}
}
{\xe \v moverMusica\:PlaylistManager}
{\xe \v PlaylistManager\:moverMusica}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PlaylistManager::moverMusica ()}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 299 \{\par
300     std::cout << std::endl;\par
301     std::cout << {\cf22 "- Mover musica de playlist -"} << std::endl;\par
302 \par
303     std::string tituloMusica, nomePlaylistOrigem, nomePlaylistDestino;\par
304 \par
305     {\cf20 // Solicita ao usu\'E1rio que digite o nome da playlist e o t\'EDtulo da m\'FAsica}\par
306     std::cout << std::endl;\par
307     std::cout << {\cf22 "Insira o nome da playlist de origem: "};\par
308     std::getline(std::cin, nomePlaylistOrigem);\par
309 \par
310     std::cout << {\cf22 "Insira o nome da playlist de destino: "};\par
311     std::getline(std::cin, nomePlaylistDestino);\par
312 \par
313     std::cout << {\cf22 "Insira o titulo da musica: "};\par
314     std::getline(std::cin, tituloMusica);\par
315 \par
316     {\cf20 // Verifica se os campos est\'E3o vazios}\par
317     {\cf19 if}(tituloMusica.empty() || nomePlaylistOrigem.empty() || nomePlaylistDestino.empty())\par
318     \{\par
319         std::cout << std::endl;\par
320         std::cout << {\cf22 "Nome da playlist ou titulo da musica nao podem ser vazios."} << std::endl;\par
321 \par
322         {\cf19 return};\par
323     \}\par
324 \par
325     {\cf20 // Busca playlist de origem por nome usando o m\'E9todo criado na classe playlistManager}\par
326     Playlist *playlistOrigem = buscarPlaylistPorNome(nomePlaylistOrigem);\par
327 \par
328     {\cf20 // Verifica se a playlist de origem existe}\par
329     {\cf19 if} (playlistOrigem == {\cf17 nullptr})\par
330     \{\par
331         std::cout << std::endl;\par
332         std::cout << {\cf22 "Playlist de origem nao encontrada."} << std::endl;\par
333 \par
334         {\cf19 return};\par
335     \}\par
336 \par
337     {\cf20 // Busca playlist de destino por nome usando o m\'E9todo criado na classe playlistManager}\par
338     Playlist *playlistDestino = buscarPlaylistPorNome(nomePlaylistDestino);\par
339 \par
340     {\cf20 // Verifica se a playlist de destino existe}\par
341     {\cf19 if} (playlistDestino == {\cf17 nullptr})\par
342     \{\par
343         std::cout << std::endl;\par
344         std::cout << {\cf22 "Playlist de destino nao encontrada."} << std::endl;\par
345 \par
346         {\cf19 return};\par
347     \}\par
348 \par
349     {\cf20 // Busca m\'FAsica por t\'EDtulo usando m\'E9todo da classe Playlist}\par
350     Musica *musica = playlistOrigem -> buscaMusicaPlaylist(&tituloMusica);\par
351 \par
352     {\cf20 // Verifica se a m\'FAsica existe na playlist de origem}\par
353     {\cf19 if} (musica == {\cf17 nullptr})\par
354     \{\par
355         std::cout << std::endl;\par
356         std::cout << {\cf22 "Musica nao encontrada na playlist "} << playlistOrigem -> getNome() << {\cf22 "."} << std::endl;\par
357     \}\par
358 \par
359     {\cf20 // Remove m\'FAsica da playlist de origem usando m\'E9todo da classe Playlist}\par
360     playlistOrigem -> removeMusicaPlaylist(&tituloMusica);\par
361 \par
362     {\cf20 // Adiciona m\'FAsica na playlist de destino usando m\'E9todo da classe Playlist}\par
363     playlistDestino -> addMusicaPlaylist(musica);\par
364 \par
365     {\cf20 // Printa mensagem de sucesso}\par
366     std::cout << std::endl;\par
367     std::cout << {\cf22 "Musica movida com sucesso da playlist "} << playlistOrigem -> getNome() << {\cf22 " para a playlist "} << playlistDestino -> getNome() << {\cf22 "."} << std::endl;\par
368 \}\par
}
}
{\xe \v removerMusica\:PlaylistManager}
{\xe \v PlaylistManager\:removerMusica}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PlaylistManager::removerMusica ()}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 198 \{\par
199     std::cout << std::endl;\par
200     std::cout << {\cf22 "- Remover musica de playlist -"} << std::endl;\par
201 \par
202     std::string tituloMusica, nomePlaylist;\par
203 \par
204     {\cf20 // Solicita ao usu\'E1rio que digite o nome da playlist e o t\'EDtulo da m\'FAsica}\par
205     std::cout << std::endl;\par
206     std::cout << {\cf22 "Insira o nome da playlist: "};\par
207     std::getline(std::cin, nomePlaylist);\par
208 \par
209     std::cout << {\cf22 "Insira o titulo da musica: "};\par
210     std::getline(std::cin, tituloMusica);\par
211 \par
212     {\cf20 // Verifica se os campos est\'E3o vazios}\par
213     {\cf19 if}(tituloMusica.empty() || nomePlaylist.empty())\par
214     \{\par
215         std::cout << std::endl;\par
216         std::cout << {\cf22 "Nome da playlist ou titulo da musica nao podem ser vazios."} << std::endl;\par
217 \par
218         {\cf19 return};\par
219     \}\par
220 \par
221     {\cf20 // Busca playlist por nome usando o m\'E9todo criado na classe playlistManager}\par
222     Playlist *playlist = buscarPlaylistPorNome(nomePlaylist);\par
223 \par
224     {\cf20 // Verifica se a playlist existe}\par
225     {\cf19 if} (playlist == {\cf17 nullptr})\par
226     \{\par
227         std::cout << std::endl;\par
228         std::cout << {\cf22 "Playlist nao encontrada."} << std::endl;\par
229 \par
230         {\cf19 return};\par
231     \}\par
232 \par
233     {\cf20 // Busca m\'FAsica por t\'EDtulo usando m\'E9todo da classe Playlist}\par
234     Musica *musica = playlist -> buscaMusicaPlaylist(&tituloMusica);\par
235 \par
236     {\cf20 // Verifica se a m\'FAsica existe na playlist}\par
237     {\cf19 if} (musica == {\cf17 nullptr})\par
238     \{\par
239         std::cout << std::endl;\par
240         std::cout << {\cf22 "Musica nao encontrada na playlist "} << playlist -> getNome() << {\cf22 "."} << std::endl;\par
241 \par
242         {\cf19 return};\par
243     \}\par
244 \par
245     {\cf20 // Remove m\'FAsica da playlist usando m\'E9todo da classe Playlist}\par
246     playlist -> removeMusicaPlaylist(&tituloMusica);\par
247 \par
248     {\cf20 // Printa mensagem de sucesso}\par
249     std::cout << std::endl;\par
250     std::cout << {\cf22 "Musica removida com sucesso da playlist "} << playlist -> getNome() << {\cf22 "."} << std::endl;\par
251 \}\par
}
}
{\xe \v removerMusicaTodasPlaylists\:PlaylistManager}
{\xe \v PlaylistManager\:removerMusicaTodasPlaylists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PlaylistManager::removerMusicaTodasPlaylists ({\b MusicasLista} *  {\i musicasLista})}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 255 \{\par
256     std::cout << std::endl;\par
257     std::cout << {\cf22 "- Remover musica de todas as playlists -"} << std::endl;\par
258 \par
259     std::string tituloMusica;\par
260 \par
261     {\cf20 // Solicita ao usu\'E1rio que digite o t\'EDtulo da m\'FAsica}\par
262     std::cout << std::endl;\par
263     std::cout << {\cf22 "Insira o titulo da musica: "};\par
264     std::getline(std::cin, tituloMusica);\par
265 \par
266     {\cf20 // Verifica se o campo est\'E1 vazio}\par
267     {\cf19 if}(tituloMusica.empty())\par
268     \{\par
269         std::cout << std::endl;\par
270         std::cout << {\cf22 "Titulo da musica nao pode ser vazio."} << std::endl;\par
271 \par
272         {\cf19 return};\par
273     \}\par
274 \par
275     {\cf20 // Percorre o vetor de playlists}\par
276     {\cf19 for} ({\cf17 auto} playlist : playlists)\par
277     \{\par
278         {\cf20 // Busca m\'FAsica na playlist}\par
279         Musica *musica = playlist -> buscaMusicaPlaylist(&tituloMusica);\par
280 \par
281         {\cf20 // Se a m\'FAsica estiver na playlist, remove}\par
282         {\cf19 if} (musica != {\cf17 nullptr})\par
283         \{\par
284             {\cf20 // Remove m\'FAsica da playlist usando m\'E9todo da classe Playlist}\par
285             playlist -> removeMusicaPlaylist(&tituloMusica);\par
286         \}\par
287     \}\par
288 \par
289     {\cf20 // Remove m\'FAsica da lista global de m\'FAsicas usando m\'E9todo da classe MusicasLista}\par
290     musicasLista -> removeMusica(tituloMusica);\par
291 \par
292     {\cf20 // Printa mensagem de sucesso}\par
293     std::cout << std::endl;\par
294     std::cout << {\cf22 "Musica removida com sucesso de todas as playlists."} << std::endl;\par
295 \}\par
}
}
{\xe \v removerPlaylist\:PlaylistManager}
{\xe \v PlaylistManager\:removerPlaylist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PlaylistManager::removerPlaylist ()}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62 \{\par
63     std::cout << std::endl;\par
64     std::cout << {\cf22 "- Remover Playlist -"} << std::endl;\par
65 \par
66     std::string nomePlaylist;\par
67 \par
68     {\cf20 // Solicita ao usu\'E1rio que digite o nome da playlist}\par
69     std::cout << std::endl;\par
70     std::cout << {\cf22 "Digite o nome da playlist que deseja remover: "};\par
71     std::getline(std::cin, nomePlaylist);\par
72 \par
73     {\cf20 // Caso o par\'E2metro esteja vazio, printa mensagem de erro e retorna}\par
74     {\cf19 if} (nomePlaylist.empty())\par
75     \{\par
76         std::cout << {\cf22 "Nome da playlist nao pode ser vazio."} << std::endl;\par
77         {\cf19 return};\par
78     \}\par
79 \par
80     {\cf20 // Percorre o "vector" de playlists}\par
81     {\cf19 for} ({\cf17 auto} it = playlists.begin(); it != playlists.end(); ++it)\par
82     \{\par
83         {\cf20 // Se encontrou a playlist, remove ela do "vector"}\par
84         {\cf19 if} ((*it) -> getNome() == nomePlaylist)\par
85         \{\par
86             {\cf20 // Remove a playlist do "vector"}\par
87             {\cf17 delete} (*it);\par
88             playlists.erase(it);\par
89 \par
90             std::cout << std::endl;\par
91             std::cout << {\cf22 "Playlist \\""} << nomePlaylist << {\cf22 "\\" removida com sucesso!"} << std::endl;\par
92 \par
93             {\cf19 return};\par
94         \}\par
95     \}\par
96 \par
97     std::cout << std::endl;\par
98     std::cout << {\cf22 "A playlist "} << nomePlaylist << {\cf22 " nao existe!"} << std::endl;\par
99 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta classe foi gerada a partir dos seguintes ficheiros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Projetos/Playlist-Maneger/include/{\b playlistManager.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/Projetos/Playlist-Maneger/src/{\b playlistManager.cpp}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documenta\'E7\'E3o do ficheiro{\tc \v Documenta\'E7\'E3o do ficheiro}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/build/CMakeFiles/3.26.3/CompilerIdC/CMakeCCompilerId.c\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/build/CMakeFiles/3.26.3/CompilerIdC/CMakeCCompilerId.c}
{\xe \v D:/Projetos/Playlist-Maneger/build/CMakeFiles/3.26.3/CompilerIdC/CMakeCCompilerId.c}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b __has_include}(x)\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COMPILER_ID}\~ ""\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRINGIFY_HELPER}(X)\~ #X\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRINGIFY}(X)\~ {\b STRINGIFY_HELPER}(X)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLATFORM_ID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ARCHITECTURE_ID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEC}(n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEX}(n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b C_VERSION}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_compiler} = "INFO" ":" "compiler[" COMPILER_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_platform} = "INFO" ":" "platform[" PLATFORM_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_arch} = "INFO" ":" "arch[" ARCHITECTURE_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b info_language_standard_default}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b info_language_extensions_default}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das macros\par
\pard\plain 
{\xe \v __has_include\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:__has_include}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define __has_include( x)\~ 0}}
\par
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ARCHITECTURE_ID\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:ARCHITECTURE_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ARCHITECTURE_ID}}
\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v C_VERSION\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:C_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define C_VERSION}}
\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v COMPILER_ID\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:COMPILER_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COMPILER_ID\~ ""}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DEC\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:DEC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEC( n)}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ({\cf23 '0'} + (((n) / 10000000)%10)), \\\par
  ({\cf23 '0'} + (((n) / 1000000)%10)),  \\\par
  ({\cf23 '0'} + (((n) / 100000)%10)),   \\\par
  ({\cf23 '0'} + (((n) / 10000)%10)),    \\\par
  ({\cf23 '0'} + (((n) / 1000)%10)),     \\\par
  ({\cf23 '0'} + (((n) / 100)%10)),      \\\par
  ({\cf23 '0'} + (((n) / 10)%10)),       \\\par
  ({\cf23 '0'} +  ((n) % 10))\par
}
}
{\xe \v HEX\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:HEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEX( n)}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ({\cf23 '0'} + ((n)>>28 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>24 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>20 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>16 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>12 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>8  & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>4  & 0xF)), \\\par
  ({\cf23 '0'} + ((n)     & 0xF))\par
}
}
{\xe \v PLATFORM_ID\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:PLATFORM_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLATFORM_ID}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v STRINGIFY\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:STRINGIFY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRINGIFY( X)\~ {\b STRINGIFY_HELPER}(X)}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v STRINGIFY_HELPER\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:STRINGIFY_HELPER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRINGIFY_HELPER( X)\~ #X}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v main\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 841 \{\par
842   {\cf18 int} require = 0;\par
843   require += info_compiler[argc];\par
844   require += info_platform[argc];\par
845   require += info_arch[argc];\par
846 {\cf21 #ifdef COMPILER_VERSION_MAJOR}\par
847   require += info_version[argc];\par
848 {\cf21 #endif}\par
849 {\cf21 #ifdef COMPILER_VERSION_INTERNAL}\par
850   require += info_version_internal[argc];\par
851 {\cf21 #endif}\par
852 {\cf21 #ifdef SIMULATE_ID}\par
853   require += info_simulate[argc];\par
854 {\cf21 #endif}\par
855 {\cf21 #ifdef SIMULATE_VERSION_MAJOR}\par
856   require += info_simulate_version[argc];\par
857 {\cf21 #endif}\par
858 {\cf21 #if defined(__CRAYXT_COMPUTE_LINUX_TARGET)}\par
859   require += info_cray[argc];\par
860 {\cf21 #endif}\par
861   require += info_language_standard_default[argc];\par
862   require += info_language_extensions_default[argc];\par
863   (void)argv;\par
864   {\cf19 return} require;\par
865 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das vari\'E1veis\par
\pard\plain 
{\xe \v info_arch\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:info_arch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]"}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v info_compiler\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:info_compiler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]"}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v info_language_extensions_default\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:info_language_extensions_default}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* info_language_extensions_default}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "extensions_default["}\par
\par
\par
\par
\par
\par
  {\cf22 "OFF"}\par
\par
{\cf22 "]"}\par
}
}
{\xe \v info_language_standard_default\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:info_language_standard_default}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* info_language_standard_default}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid =\par
  {\cf22 "INFO"} {\cf22 ":"} {\cf22 "standard_default["} C_VERSION {\cf22 "]"}\par
}
}
{\xe \v info_platform\:CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c\:info_platform}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]"}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/build/CMakeFiles/3.26.3/CompilerIdCXX/CMakeCXXCompilerId.cpp\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/build/CMakeFiles/3.26.3/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v D:/Projetos/Playlist-Maneger/build/CMakeFiles/3.26.3/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b __has_include}(x)\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COMPILER_ID}\~ ""\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRINGIFY_HELPER}(X)\~ #X\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRINGIFY}(X)\~ {\b STRINGIFY_HELPER}(X)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLATFORM_ID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ARCHITECTURE_ID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEC}(n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEX}(n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CXX_STD}\~ __cplusplus\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_compiler} = "INFO" ":" "compiler[" COMPILER_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_platform} = "INFO" ":" "platform[" PLATFORM_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_arch} = "INFO" ":" "arch[" ARCHITECTURE_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b info_language_standard_default}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b info_language_extensions_default}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das macros\par
\pard\plain 
{\xe \v __has_include\:CMakeCXXCompilerId.cpp}
{\xe \v CMakeCXXCompilerId.cpp\:__has_include}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define __has_include( x)\~ 0}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ARCHITECTURE_ID\:CMakeCXXCompilerId.cpp}
{\xe \v CMakeCXXCompilerId.cpp\:ARCHITECTURE_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ARCHITECTURE_ID}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v COMPILER_ID\:CMakeCXXCompilerId.cpp}
{\xe \v CMakeCXXCompilerId.cpp\:COMPILER_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COMPILER_ID\~ ""}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CXX_STD\:CMakeCXXCompilerId.cpp}
{\xe \v CMakeCXXCompilerId.cpp\:CXX_STD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CXX_STD\~ __cplusplus}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DEC\:CMakeCXXCompilerId.cpp}
{\xe \v CMakeCXXCompilerId.cpp\:DEC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEC( n)}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ({\cf23 '0'} + (((n) / 10000000)%10)), \\\par
  ({\cf23 '0'} + (((n) / 1000000)%10)),  \\\par
  ({\cf23 '0'} + (((n) / 100000)%10)),   \\\par
  ({\cf23 '0'} + (((n) / 10000)%10)),    \\\par
  ({\cf23 '0'} + (((n) / 1000)%10)),     \\\par
  ({\cf23 '0'} + (((n) / 100)%10)),      \\\par
  ({\cf23 '0'} + (((n) / 10)%10)),       \\\par
  ({\cf23 '0'} +  ((n) % 10))\par
}
}
{\xe \v HEX\:CMakeCXXCompilerId.cpp}
{\xe \v CMakeCXXCompilerId.cpp\:HEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEX( n)}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ({\cf23 '0'} + ((n)>>28 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>24 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>20 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>16 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>12 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>8  & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>4  & 0xF)), \\\par
  ({\cf23 '0'} + ((n)     & 0xF))\par
}
}
{\xe \v PLATFORM_ID\:CMakeCXXCompilerId.cpp}
{\xe \v CMakeCXXCompilerId.cpp\:PLATFORM_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLATFORM_ID}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v STRINGIFY\:CMakeCXXCompilerId.cpp}
{\xe \v CMakeCXXCompilerId.cpp\:STRINGIFY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRINGIFY( X)\~ {\b STRINGIFY_HELPER}(X)}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v STRINGIFY_HELPER\:CMakeCXXCompilerId.cpp}
{\xe \v CMakeCXXCompilerId.cpp\:STRINGIFY_HELPER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRINGIFY_HELPER( X)\~ #X}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v main\:CMakeCXXCompilerId.cpp}
{\xe \v CMakeCXXCompilerId.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 831 \{\par
832   {\cf18 int} require = 0;\par
833   require += info_compiler[argc];\par
834   require += info_platform[argc];\par
835   require += info_arch[argc];\par
836 {\cf21 #ifdef COMPILER_VERSION_MAJOR}\par
837   require += info_version[argc];\par
838 {\cf21 #endif}\par
839 {\cf21 #ifdef COMPILER_VERSION_INTERNAL}\par
840   require += info_version_internal[argc];\par
841 {\cf21 #endif}\par
842 {\cf21 #ifdef SIMULATE_ID}\par
843   require += info_simulate[argc];\par
844 {\cf21 #endif}\par
845 {\cf21 #ifdef SIMULATE_VERSION_MAJOR}\par
846   require += info_simulate_version[argc];\par
847 {\cf21 #endif}\par
848 {\cf21 #if defined(__CRAYXT_COMPUTE_LINUX_TARGET)}\par
849   require += info_cray[argc];\par
850 {\cf21 #endif}\par
851   require += info_language_standard_default[argc];\par
852   require += info_language_extensions_default[argc];\par
853   (void)argv;\par
854   {\cf19 return} require;\par
855 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das vari\'E1veis\par
\pard\plain 
{\xe \v info_arch\:CMakeCXXCompilerId.cpp}
{\xe \v CMakeCXXCompilerId.cpp\:info_arch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]"}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v info_compiler\:CMakeCXXCompilerId.cpp}
{\xe \v CMakeCXXCompilerId.cpp\:info_compiler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]"}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v info_language_extensions_default\:CMakeCXXCompilerId.cpp}
{\xe \v CMakeCXXCompilerId.cpp\:info_language_extensions_default}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* info_language_extensions_default}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "extensions_default["}\par
\par
\par
\par
\par
\par
  {\cf22 "OFF"}\par
\par
{\cf22 "]"}\par
}
}
{\xe \v info_language_standard_default\:CMakeCXXCompilerId.cpp}
{\xe \v CMakeCXXCompilerId.cpp\:info_language_standard_default}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* info_language_standard_default}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "standard_default["}\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
  {\cf22 "98"}\par
\par
{\cf22 "]"}\par
}
}
{\xe \v info_platform\:CMakeCXXCompilerId.cpp}
{\xe \v CMakeCXXCompilerId.cpp\:info_platform}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]"}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/listaMusica.cpp.obj.d\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/listaMusica.cpp.obj.d}
{\xe \v D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/listaMusica.cpp.obj.d}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/main.cpp.obj.d\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/main.cpp.obj.d}
{\xe \v D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/main.cpp.obj.d}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/musica.cpp.obj.d\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/musica.cpp.obj.d}
{\xe \v D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/musica.cpp.obj.d}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/noLista.cpp.obj.d\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/noLista.cpp.obj.d}
{\xe \v D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/noLista.cpp.obj.d}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/noPlaylist.cpp.obj.d\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/noPlaylist.cpp.obj.d}
{\xe \v D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/noPlaylist.cpp.obj.d}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/playlist.cpp.obj.d\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/playlist.cpp.obj.d}
{\xe \v D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/playlist.cpp.obj.d}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/playlistManager.cpp.obj.d\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/playlistManager.cpp.obj.d}
{\xe \v D:/Projetos/Playlist-Maneger/build/CMakeFiles/Gerenciador.dir/src/playlistManager.cpp.obj.d}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/include/listaMusica.h\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/include/listaMusica.h}
{\xe \v D:/Projetos/Playlist-Maneger/include/listaMusica.h}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "noLista.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MusicasLista}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
listaMusica.h\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/include/listaMusica.h}
{\xe \v D:/Projetos/Playlist-Maneger/include/listaMusica.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Ir para a documenta\'E7\'E3o deste ficheiro.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef LISTAMUSICA_H}\par
2 {\cf21 #define LISTAMUSICA_H}\par
3 \par
4 {\cf21 #include "noLista.h"}\par
5 \par
6 {\cf17 class }MusicasLista\par
7 \{\par
8     {\cf17 private}:\par
9 \par
10         NoLista *head;\par
11         {\cf18 int} tamanho;\par
12     \par
13     {\cf17 public}:\par
14 \par
15         {\cf20 // Construtor}\par
16         MusicasLista();\par
17 \par
18         {\cf20 // Destrutor}\par
19         ~MusicasLista();\par
20 \par
21         {\cf20 // Adicionar e remover m\'FAsicas}\par
22         {\cf18 void} addMusica();\par
23         {\cf18 void} removeMusica(std::string titulo);\par
24 \par
25         {\cf20 // Busca m\'FAsica cadastrada na lista}\par
26         Musica* buscaMusica(std::string titulo);\par
27 \par
28         {\cf20 // Imprime lista de m\'FAsicas}\par
29         {\cf18 void} coutLista();\par
30 \};\par
31 \par
32 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/include/musica.h\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/include/musica.h}
{\xe \v D:/Projetos/Playlist-Maneger/include/musica.h}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Musica}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
musica.h\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/include/musica.h}
{\xe \v D:/Projetos/Playlist-Maneger/include/musica.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Ir para a documenta\'E7\'E3o deste ficheiro.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef MUSICA_H}\par
2 {\cf21 #define MUSICA_H}\par
3 \par
4 {\cf21 #include <string>}\par
5 \par
6 {\cf17 class }Musica\par
7 \{\par
8     {\cf17 private}:\par
9 \par
10         std::string *titulo;\par
11         std::string *cantor;\par
12 \par
13     {\cf17 public}:\par
14 \par
15         {\cf20 // Construtor}\par
16         Musica(std::string *m_titulo, std::string *m_cantor);\par
17 \par
18         {\cf20 // Destrutor}\par
19         ~Musica();\par
20 \par
21         {\cf20 // Getters}\par
22         std::string *getTitulo();\par
23         std::string *getCantor();\par
24 \};\par
25 \par
26 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/include/noLista.h\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/include/noLista.h}
{\xe \v D:/Projetos/Playlist-Maneger/include/noLista.h}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "musica.h"}\par
{\f2 #include <iostream>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NoLista}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
noLista.h\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/include/noLista.h}
{\xe \v D:/Projetos/Playlist-Maneger/include/noLista.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Ir para a documenta\'E7\'E3o deste ficheiro.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef NOLISTA_H}\par
2 {\cf21 #define NOLISTA_H}\par
3 \par
4 {\cf21 #include "musica.h"}\par
5 {\cf21 #include <iostream>}\par
6 \par
7 {\cf17 class }NoLista\par
8 \{\par
9     {\cf17 private}:\par
10 \par
11         Musica *musica;\par
12         NoLista *proxima;\par
13     \par
14     {\cf17 public}:\par
15         \par
16         {\cf20 // Construtor}\par
17         NoLista(Musica *novaMusica, NoLista *proximaMusica);\par
18 \par
19         {\cf20 // Destrutor}\par
20         ~NoLista();\par
21 \par
22         {\cf20 // Getters}\par
23         Musica *getMusica();\par
24         NoLista *getProxima();\par
25 \par
26         {\cf20 // Setter}\par
27         {\cf18 void} setProxima(NoLista *proximo);\par
28 \};\par
29 \par
30 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/include/noPlaylist.h\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/include/noPlaylist.h}
{\xe \v D:/Projetos/Playlist-Maneger/include/noPlaylist.h}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Musica.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NoPlaylist}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
noPlaylist.h\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/include/noPlaylist.h}
{\xe \v D:/Projetos/Playlist-Maneger/include/noPlaylist.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Ir para a documenta\'E7\'E3o deste ficheiro.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef NOPLAYLIST_H}\par
2 {\cf21 #define NOPLAYLIST_H}\par
3 \par
4 {\cf21 #include "Musica.h"}\par
5 \par
6 {\cf17 class }NoPlaylist\par
7 \{\par
8     {\cf17 private}:\par
9 \par
10         Musica *musica;\par
11         NoPlaylist *next;\par
12 \par
13     {\cf17 public}:\par
14 \par
15         {\cf20 // Construtor}\par
16         NoPlaylist(Musica *m_musica);\par
17 \par
18         {\cf20 // Destrutor}\par
19         ~NoPlaylist();\par
20 \par
21         {\cf20 // Getter e setter da m\'FAsica}\par
22         Musica* getMusica();\par
23         {\cf18 void} setMusica(Musica *m_musica);\par
24 \par
25         {\cf20 // Getter e setter do pr\'F3ximo n\'F3 da lista}\par
26         NoPlaylist* getNext();\par
27         {\cf18 void} setNext(NoPlaylist *m_next);\par
28 \};\par
29 \par
30 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/include/playlist.h\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/include/playlist.h}
{\xe \v D:/Projetos/Playlist-Maneger/include/playlist.h}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "listaMusica.h"}\par
{\f2 #include "noPlaylist.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Playlist}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
playlist.h\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/include/playlist.h}
{\xe \v D:/Projetos/Playlist-Maneger/include/playlist.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Ir para a documenta\'E7\'E3o deste ficheiro.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef PLAYLIST_H}\par
2 {\cf21 #define PLAYLIST_H}\par
3 \par
4 {\cf21 #include "listaMusica.h"}\par
5 {\cf21 #include "noPlaylist.h"}\par
6 \par
7 {\cf17 class }Playlist\par
8 \{\par
9     {\cf17 private}:\par
10 \par
11         std::string nomePlaylist;\par
12         NoPlaylist *head;\par
13         {\cf18 int} tamanhoPlaylist;\par
14 \par
15     {\cf17 public}:\par
16 \par
17         {\cf20 // Construtor}\par
18         Playlist(std::string m_nomePlaylist);\par
19 \par
20         {\cf20 // Destrutor}\par
21         ~Playlist();\par
22 \par
23         {\cf20 // procura m\'FAsica na playlist}\par
24         Musica* buscaMusicaPlaylist(std::string *titulo);\par
25 \par
26         {\cf20 // Adiciona m\'FAsica \'E0 playlist}\par
27         {\cf18 void} addMusicaPlaylist(Musica *m_musica);\par
28 \par
29         {\cf20 // Remove m\'FAsica da playlist}\par
30         {\cf18 void} removeMusicaPlaylist(std::string *titulo);\par
31 \par
32         {\cf20 // Getter}\par
33         std::string getNome();\par
34         NoPlaylist *getHead();\par
35 \par
36         {\cf20 // setter}\par
37         {\cf18 void} setHead(NoPlaylist *m_head);\par
38 \};\par
39 \par
40 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/include/playlistManager.h\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/include/playlistManager.h}
{\xe \v D:/Projetos/Playlist-Maneger/include/playlistManager.h}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include "Playlist.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PlaylistManager}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
playlistManager.h\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/include/playlistManager.h}
{\xe \v D:/Projetos/Playlist-Maneger/include/playlistManager.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Ir para a documenta\'E7\'E3o deste ficheiro.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef PLAYLISTMANAGER_H}\par
2 {\cf21 #define PLAYLISTMANAGER_H}\par
3 \par
4 {\cf21 #include <vector>}\par
5 {\cf21 #include "Playlist.h"}\par
6 \par
7 {\cf17 class }PlaylistManager\par
8 \{\par
9     {\cf17 private}:\par
10 \par
11         std::vector<Playlist*> playlists;\par
12 \par
13     {\cf17 public}:\par
14 \par
15         {\cf20 // Construtor}\par
16         PlaylistManager();\par
17 \par
18         {\cf20 // Destrutor}\par
19         ~PlaylistManager();\par
20 \par
21         {\cf20 // Cria uma nova playlist}\par
22         {\cf18 void} criarPlaylist();\par
23 \par
24         {\cf20 // Remove uma playlist}\par
25         {\cf18 void} removerPlaylist();\par
26 \par
27         {\cf20 // Adiciona uma m\'FAsica a uma playlist}\par
28         {\cf18 void} adicionarMusica(MusicasLista *musicas);\par
29 \par
30         {\cf20 // Remove uma m\'FAsica de uma playlist}\par
31         {\cf18 void} removerMusica();\par
32 \par
33         {\cf20 // Remover m\'FAsica de todas as playlists}\par
34         {\cf18 void} removerMusicaTodasPlaylists(MusicasLista* musicasLista);\par
35 \par
36         {\cf20 // move uma m\'FAsica de uma playlist para outra}\par
37         {\cf18 void} moverMusica();\par
38 \par
39         {\cf20 // Identifica uma playlist}\par
40         Playlist* buscarPlaylistPorNome(std::string nome);\par
41 \par
42         {\cf20 // Imprime todas as playlists}\par
43         {\cf18 void} listarPlaylists();\par
44 \par
45         {\cf20 // Imprime m\'FAsicas de playlist por recurss\'E3o}\par
46         {\cf18 void} listarMusicasPlaylist();\par
47         {\cf18 void} listarMusicasPlaylistRecursivo(NoPlaylist *musicaAtual);\par
48 \};\par
49 \par
50 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/README.md\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/README.md}
{\xe \v D:/Projetos/Playlist-Maneger/README.md}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/src/listaMusica.cpp\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/src/listaMusica.cpp}
{\xe \v D:/Projetos/Playlist-Maneger/src/listaMusica.cpp}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../include/listaMusica.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/src/main.cpp\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/src/main.cpp}
{\xe \v D:/Projetos/Playlist-Maneger/src/main.cpp}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../include/playlistManager.h"}\par
{\f2 #include <limits>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v main\:main.cpp}
{\xe \v main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5 \{\par
6     {\cf20 // Cria inst\'E2ncias das classes}\par
7     MusicasLista musicas;\par
8     PlaylistManager listas;\par
9 \par
10     {\cf20 // Vari\'E1vel que armazena a op\'E7\'E3o digitada pelo usu\'E1rio}\par
11     {\cf18 int} opcao = 0;\par
12 \par
13     {\cf20 // Imprime o cabe\'E7alho do programa}\par
14     std::cout << {\cf22 "========== GERENCIADOR DE PLAYLISTS =========="} << std::endl;\par
15     std::cout << {\cf22 "----------------------------------------------"} << std::endl;\par
16     std::cout << {\cf22 "   Projeto LP I - Breno Barbosa de Oliveira   "} << std::endl;\par
17     std::cout << {\cf22 "----------------------------------------------"} << std::endl;\par
18 \par
19     std::cout << std::endl;\par
20 \par
21     {\cf20 // La\'E7o while que roda at\'E9 que o usu\'E1rio digite a op\'E7\'E3o 11 (menu de navega\'E7\'E3o)}\par
22     {\cf19 while} (opcao != 11)\par
23     \{\par
24         std::cout << std::endl;\par
25         std::cout << {\cf22 "1  - Adicionar musica"} << std::endl;\par
26         std::cout << {\cf22 "2  - Remover musica do sistema"} << std::endl;\par
27         std::cout << {\cf22 "3  - Criar playlist"} << std::endl;\par
28         std::cout << {\cf22 "4  - Remover playlist"} << std::endl;\par
29         std::cout << {\cf22 "5  - Adicionar musica a playlist"} << std::endl;\par
30         std::cout << {\cf22 "6  - Remover musica de playlist"} << std::endl;\par
31         std::cout << {\cf22 "7  - Listar playlists"} << std::endl;\par
32         std::cout << {\cf22 "8  - Listar musicas de playlist"} << std::endl;\par
33         std::cout << {\cf22 "9  - Listar musicas do sistema"} << std::endl;\par
34         std::cout << {\cf22 "10 - Mover musica de playlist"} << std::endl;\par
35         std::cout << {\cf22 "11 - Sair"} << std::endl;\par
36 \par
37         {\cf20 // Solicita ao usu\'E1rio que digite a op\'E7\'E3o desejada}\par
38         std::cout << std::endl;\par
39         std::cout << {\cf22 "Digite a opcao desejada: "};\par
40 \par
41         {\cf20 // L\'EA a op\'E7\'E3o digitada pelo usu\'E1rio e limpa o buffer}\par
42         std::cin >> opcao;\par
43         std::cin.ignore(std::numeric_limits<std::streamsize>::max(), {\cf23 '\\n'});\par
44 \par
45         {\cf20 // Caso usu\'E1rio digite um valor n\'E3o inteiro}\par
46         {\cf19 if} (std::cin.fail())\par
47         \{\par
48             std::cin.clear();\par
49             std::cin.ignore(std::numeric_limits<std::streamsize>::max(), {\cf23 '\\n'});\par
50             std::cout << std::endl;\par
51             std::cout << {\cf22 "Opcao invalida!"} << std::endl;\par
52 \par
53             {\cf19 continue};\par
54         \}\par
55 \par
56         {\cf20 // Switch case para navega\'E7\'E3o do menu}\par
57         {\cf19 switch} (opcao)\par
58         \{\par
59             {\cf19 case} 1:\par
60                 musicas.addMusica();\par
61                 {\cf19 break};\par
62             {\cf19 case} 2:\par
63                 listas.removerMusicaTodasPlaylists(&musicas);\par
64                 {\cf19 break};\par
65             {\cf19 case} 3:\par
66                 listas.criarPlaylist();\par
67                 {\cf19 break};\par
68             {\cf19 case} 4:\par
69                 listas.removerPlaylist();\par
70                 {\cf19 break};\par
71             {\cf19 case} 5:\par
72                 listas.adicionarMusica(&musicas);\par
73                 {\cf19 break};\par
74             {\cf19 case} 6:\par
75                 listas.removerMusica();\par
76                 {\cf19 break};\par
77             {\cf19 case} 7:\par
78                 listas.listarPlaylists();\par
79                 {\cf19 break};\par
80             {\cf19 case} 8:\par
81                 listas.listarMusicasPlaylist();\par
82                 {\cf19 break};\par
83             {\cf19 case} 9:\par
84                 musicas.coutLista();\par
85                 {\cf19 break};\par
86             {\cf19 case} 10:\par
87                 listas.moverMusica();\par
88                 {\cf19 break};\par
89             {\cf19 case} 11:\par
90                 std::cout << std::endl;\par
91                 std::cout << {\cf22 "Saindo..."} << std::endl;\par
92                 std::cout << std::endl;\par
93                 {\cf19 break};\par
94             {\cf19 default}:\par
95                 std::cout << {\cf22 "Op\'E7\'E3o inv\'E1lida!"} << std::endl;\par
96                 {\cf19 break};\par
97         \}\par
98     \}\par
99 \par
100     system({\cf22 "pause"});\par
101 \par
102     {\cf19 return} 0;\par
103 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/src/musica.cpp\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/src/musica.cpp}
{\xe \v D:/Projetos/Playlist-Maneger/src/musica.cpp}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../include/musica.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/src/noLista.cpp\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/src/noLista.cpp}
{\xe \v D:/Projetos/Playlist-Maneger/src/noLista.cpp}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../include/noLista.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/src/noPlaylist.cpp\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/src/noPlaylist.cpp}
{\xe \v D:/Projetos/Playlist-Maneger/src/noPlaylist.cpp}
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../include/noPlaylist.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/src/playlist.cpp\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/src/playlist.cpp}
{\xe \v D:/Projetos/Playlist-Maneger/src/playlist.cpp}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../include/playlist.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro D:/Projetos/Playlist-Maneger/src/playlistManager.cpp\par \pard\plain 
{\tc\tcl2 \v D:/Projetos/Playlist-Maneger/src/playlistManager.cpp}
{\xe \v D:/Projetos/Playlist-Maneger/src/playlistManager.cpp}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../include/playlistManager.h"}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'CDndice\par 
\pard\plain 
{\tc \v \'CDndice}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
